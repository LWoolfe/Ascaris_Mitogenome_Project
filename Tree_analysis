##Editing a phylogenomic tree in R. 

setwd("S:/Research/Lauren_Ascaris_2/mtDNA_mitoz_mitos_analyses/mitos_final/faa/Ascaris_AA_tree")
library(ape)
library(ggtree)
library(treeio)
library(ggplot2)
library(svglite)

# Load and root the tree
tree <- read.tree("new_aa_wtoxa.nwk")
tree_rooted <- root(tree, outgroup = "Toxa_leonina_MN329693", resolve.root = TRUE)
tree_rooted <- reorder.phylo(tree_rooted, order = "cladewise")

# Preserve bootstrap values
tree_rooted$node.label[1:length(tree$node.label)] <- tree$node.label

# Ensure root branch is visible and negative branches are fixed
tree_rooted$edge.length[tree_rooted$edge[,1] == Ntip(tree_rooted) + 1] <- 0.001
tree_rooted$edge.length[tree_rooted$edge.length < 0] <- 0

# Ladderize tree
tree_laddered <- ladderize(tree_rooted, right = FALSE)

# Create initial plot which is used to determine the clades
p2 <- ggtree(tree_laddered) +
  geom_tiplab(size = 2) +
  geom_text2(
    aes(subset = !isTip & grepl("^[0-9.]+$", label) & as.numeric(label) > 80,
        label = sprintf("%.1f", as.numeric(label))),
    size = 1.3, hjust = -0.3, vjust = -0.7
  ) +
  ggtitle("Neighbour Joining Tree with Bootstrap > 80%")

# Print preview
print(p2)

# Save basic plot
ggsave("aminoacid_tree.png", plot = p2, width = 10, height = 12, units = "in", dpi = 300)

# Extract and order tip labels from ggtree object. This lists the order of the samples from the top to the bottom of the tree
tip_data <- p2$data[p2$data$isTip, ]
ordered_tips <- tip_data$label[order(-tip_data$y)] 
stopifnot(is.vector(ordered_tips), is.character(ordered_tips))

# Save as .txt (one label per line)
writeLines(ordered_tips, "tiplabels_aminoacid_bars.txt")

# Optional: Also save as a vertical CSV for Excel
write.csv(data.frame(TipLabel = ordered_tips), 
          "tiplabels_aminoacid_bar.csv", 
          row.names = FALSE, quote = FALSE)

#Visualise the tree and manually assign the clades. Save as clade_aminoacid.csv

# Read clade annotations
clade_df <- read.csv("clade_aminoacid.csv", stringsAsFactors = FALSE)

# Create a named list of labels by clade
clade_list <- split(clade_df$label, clade_df$clade)
clade_df$clade <- toupper(gsub("[0-9]+$", "", clade_df$clade))

# Create a named list of labels by clade
clade_list <- split(clade_df$label, clade_df$clade)

# Group the tree using ggtree::groupOTU
tree_grouped <- groupOTU(tree_rooted, clade_list)

# Define clade colours
clade_colours <- c(
  "A"  = "darkblue", 
  "B"  = "#ea731e",
  "C"  = "#009E73",
  "D"  = "#cf0086"
)

# Plot the tree
tree_grouped$data$y <- tree_grouped$data$y * 1.5

p <- ggtree(tree_grouped, aes(color = group)) +
  geom_tree(size = 0.7) +
  geom_tiplab(size = 1.6) +
  geom_text2(
    aes(subset = !isTip &
          !is.na(suppressWarnings(as.numeric(label))) &
          suppressWarnings(as.numeric(label)) > 0.01,
        label = sprintf("%.1f", suppressWarnings(as.numeric(label)) * 100)),
    size = 1.3, hjust = -0.3, vjust = -0.7
  ) +
  geom_treescale(x = 0, y = -5, width = 0.02, linesize = 0.5, fontsize = 3) +
  scale_color_manual(name = "Clade", values = clade_colours) +
  ggtitle(expression(italic("Ascaris")~"concatenated mtDNA amino acids")) +
  theme_tree2() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 13),
    legend.position.inside = c(0.02, 0.98),  # ‚Üê replaces `legend.position = c(...)`
    legend.justification = c(0, 1),
    legend.title = element_text(size = 10),
    legend.text = element_text(size = 9),
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
    axis.line.x = element_blank(),
    plot.margin = margin(10, 10, 10, 10)
  )

max_x <- max(ggtree(tree_rooted)$data$x, na.rm = TRUE)
p <- p + xlim(0, max_x * 1.25)
print(p)

# Save the tree
ggsave("ascaris_concat_aa_mtDNA_clades.svg", p, width = 8.27, height = 15, units = "in", dpi = 300) ##.SVG files can be edited in other platforms. For example, to move overlapping bootstrap values 
ggsave("ascaris_concat_aa_mtDNA_clades.png", p, width = 10, height = 15, units = "in", dpi = 300)          






